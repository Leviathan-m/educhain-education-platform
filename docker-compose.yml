version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: nft-education-mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: nft-education
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./docker/mongo-init:/docker-entrypoint-initdb.d
    networks:
      - nft-education-network

  # Redis Cache
  redis:
    image: redis:7.2-alpine
    container_name: nft-education-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - nft-education-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: nft-education-backend
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 3000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/nft-education?authSource=admin
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      FRONTEND_URL: http://localhost:3001
      POLYGON_RPC_URL: https://polygon-rpc.com
      # CONTRACT_ADDRESS: 0x... (set after deployment)
      SERVICE_PRIVATE_KEY: 0x1234567890123456789012345678901234567890123456789012345678901234
      IPFS_HOST: ipfs.infura.io
      IPFS_PORT: 5001
      IPFS_PROTOCOL: https
      ENCRYPTION_KEY: your-32-character-encryption-key
      LOG_LEVEL: debug
    ports:
      - "3000:3000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - mongodb
      - redis
    networks:
      - nft-education-network

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: nft-education-frontend
    restart: unless-stopped
    environment:
      REACT_APP_API_URL: http://localhost:3000/api
      REACT_APP_ENV: development
    ports:
      - "3001:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - nft-education-network

  # AI Service (Python FastAPI)
  ai-service:
    build:
      context: ./ai-service
      dockerfile: Dockerfile
    container_name: nft-education-ai
    restart: unless-stopped
    environment:
      PYTHONPATH: /app
      API_HOST: 0.0.0.0
      API_PORT: 8000
      DEBUG: "true"
      MODEL_CACHE_DIR: /app/models/cache
      AI_SERVICE_URL: http://ai-service:8000
      BACKEND_API_URL: http://backend:3000
    ports:
      - "8000:8000"
    volumes:
      - ./ai-service:/app
      - ai_models_cache:/app/models/cache
    networks:
      - nft-education-network

  # Nginx Reverse Proxy (Optional - for production)
  nginx:
    image: nginx:alpine
    container_name: nft-education-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
      - ai-service
    networks:
      - nft-education-network
    profiles:
      - production

  # Prometheus Monitoring (Optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: nft-education-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - nft-education-network
    profiles:
      - monitoring

  # Grafana Dashboard (Optional)
  grafana:
    image: grafana/grafana:latest
    container_name: nft-education-grafana
    restart: unless-stopped
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin123
    ports:
      - "3002:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - nft-education-network
    profiles:
      - monitoring

volumes:
  mongodb_data:
  redis_data:
  ai_models_cache:
  prometheus_data:
  grafana_data:

networks:
  nft-education-network:
    driver: bridge
